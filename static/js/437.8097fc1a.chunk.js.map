{"version":3,"file":"static/js/437.8097fc1a.chunk.js","mappings":"mPAEMA,EAAiB,SAACC,GAAK,OAAKA,EAAMC,WAAY,EAEvCC,GAAUC,EAAAA,EAAAA,IACrB,CAACJ,IACD,SAACE,GAAW,OAAKA,EAAYG,KAAK,IAGvBC,GAAiBF,EAAAA,EAAAA,IAC5B,CAACJ,IACD,SAACE,GAAW,OAAKA,EAAYK,OAAO,ICVtC,GAAgB,SAAW,0BAA0B,IAAM,sB,UCA3D,EAAuB,mBAAvB,EAAmD,qBAAnD,EAAkF,sBAAlF,EAA+G,mB,SCQlGC,EAAO,SAACC,GACnB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EACXG,IAAKC,EAAAA,EACLC,IAAI,YAENH,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAcC,SAAEJ,EAAMS,WACvCR,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAWC,SAAA,CAAC,QAAMJ,EAAMU,gBAG/C,ECdaC,EAAU,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MACXjB,GAAQkB,EAAAA,EAAAA,IAAYpB,GAE1BqB,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAO1BC,EAAgBxB,EAAMyB,KAAI,SAACC,GAAS,OACxCjB,EAAAA,EAAAA,KAACN,EAAI,CAEHwB,GAAID,EAAKC,GACTd,QAASa,EAAKb,QACdC,WAAYY,EAAKZ,YAHZY,EAAKC,GAIV,IAGJ,OACEtB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,MAAYC,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,QAAMuB,SAAUN,GAhBH,SAACO,GAChBb,GAASc,EAAAA,EAAAA,IAAUD,EAAKE,WACxBR,GACF,IAa2Cf,SAAA,EACrCC,EAAAA,EAAAA,KAAA,YAAAuB,EAAAA,EAAAA,GAAA,CACE1B,UAAWC,EAAAA,SACX0B,YAAY,sBACRZ,EAAS,eAEfZ,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EAAAA,IACX2B,KAAK,SAAQ1B,SACd,gBAIFgB,IAGP,EC5CA,GAAiB,E,UCAjB,EAAwB,2B,UCGXW,EAAgB,SAAC/B,GAC5B,IAAAgC,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA4BL,EAAAA,EAAAA,UAASjC,EAAMuC,QAAOC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA3CC,EAAMC,EAAA,GAAEC,EAASD,EAAA,GAClB5B,GAAWC,EAAAA,EAAAA,MAwBjB,OAPA6B,EAAAA,EAAAA,YAAU,WACJ1C,EAAMuC,SAAWA,GACnBE,EAAUzC,EAAMuC,OAGpB,GAAG,CAACvC,EAAMuC,UAGRlC,EAAAA,EAAAA,KAAA,OAAAD,SACGgC,GACC/B,EAAAA,EAAAA,KAAA,SACEyB,KAAK,OACLa,MAAOJ,EACPK,OAxBmB,WACzBP,GAAY,GACRE,IAAWvC,EAAMuC,QACnB3B,GAASiC,EAAAA,EAAAA,IAAaN,GAE1B,EAoBQO,WAAW,EACXC,SAnBe,SAACC,GACtBP,EAAUO,EAAEC,OAAON,MACrB,KAoBMtC,EAAAA,EAAAA,KAAA,OAAK6C,QAjCc,WACvBb,GAAY,EACd,EA+BqCjC,SAAEmC,GAAU,aAInD,ECvCaY,EAAc,WACzB,IAAMC,GAActC,EAAAA,EAAAA,IAAYjB,GAC1BwD,GAAgBvC,EAAAA,EAAAA,IAAYwC,EAAAA,IAElC,OAAKF,GAKHnD,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAYC,SAAC,cAC5BC,EAAAA,EAAAA,KAAA,OACEC,IAAK8C,EAAYG,OAAOC,MACxBhD,IAAI,WAEL6C,IAAkBD,EAAYK,QAASpD,EAAAA,EAAAA,KAAC0B,EAAa,IAAM,MAC5D1B,EAAAA,EAAAA,KAAA,OAAAD,SAAMgD,EAAYM,YAClBrD,EAAAA,EAAAA,KAAA,OAAAD,SAAMgD,EAAYO,SAASC,aAZtBvD,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,GAerB,ECSA,EA3BgB,WACd,IAAMjD,GAAWC,EAAAA,EAAAA,MACT4C,GAAWK,EAAAA,EAAAA,MAAXL,OACFM,GAAWC,EAAAA,EAAAA,MACXC,GAAmBnD,EAAAA,EAAAA,IAAYwC,EAAAA,IAE/BY,GAAkBC,EAAAA,EAAAA,cAAY,WAClCJ,EAAS,SACX,GAAG,CAACA,IAWJ,OATArB,EAAAA,EAAAA,YAAU,WACR,IAAM0B,EAAgBX,GAAUQ,EAC5BG,EACFxD,GAASf,EAAAA,EAAAA,IAAeuE,IAExBF,GAEJ,GAAG,CAACT,EAAQQ,EAAkBrD,EAAUsD,KAGtCjE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAcC,SAAA,EAC5BC,EAAAA,EAAAA,KAAC8C,EAAW,KACZ9C,EAAAA,EAAAA,KAACM,EAAO,MAGd,C","sources":["redux/profile-selectors.js","webpack://social-network/./src/components/profile/myPosts/myPosts.module.css?bbaf","webpack://social-network/./src/components/profile/myPosts/post/post.module.css?a198","components/profile/myPosts/post/Post.tsx","components/profile/myPosts/MyPosts.tsx","components/profile/profile.module.css","webpack://social-network/./src/components/profile/profileInfo/profileInfo.module.css?01bc","components/profile/profileInfo/profileStatus/ProfileStatus.jsx","components/profile/profileInfo/ProfileInfo.jsx","components/profile/Profile.jsx"],"sourcesContent":["import { createSelector } from 'reselect';\n\nconst getProfilePage = (state) => state.profilePage;\n\nexport const getPost = createSelector(\n  [getProfilePage],\n  (profilePage) => profilePage.posts,\n);\n\nexport const getUserProfile = createSelector(\n  [getProfilePage],\n  (profilePage) => profilePage.profile,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"myPosts_textarea__IEqql\",\"btn\":\"myPosts_btn__vl206\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"post_post__I4HSx\",\"avatar\":\"post_avatar__By7gP\",\"message\":\"post_message__akqbW\",\"like\":\"post_like__2RtdF\"};","import avatar from '../../../../assets/avatar.svg';\nimport style from './post.module.css';\n\ntype PostPropsType = {\n  id: string;\n  message: string;\n  likesCount: number;\n};\n\nexport const Post = (props: PostPropsType) => {\n  return (\n    <div className={style.post}>\n      <img\n        className={style.avatar}\n        src={avatar}\n        alt='avatar'\n      />\n      <span className={style.message}>{props.message}</span>\n      <span className={style.like}>like {props.likesCount}</span>\n    </div>\n  );\n};\n","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPostAC } from '../../../redux/profile-reducer';\nimport { getPost } from '../../../redux/profile-selectors';\nimport style from './myPosts.module.css';\nimport { Post } from './post/Post';\n\nexport const MyPosts = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(getPost);\n\n  const { register, handleSubmit, reset } = useForm();\n\n  const onSubmit = (data: any) => {\n    dispatch(addPostAC(data.textarea));\n    reset();\n  };\n\n  const postsElements = posts.map((post: any) => (\n    <Post\n      key={post.id}\n      id={post.id}\n      message={post.message}\n      likesCount={post.likesCount}\n    />\n  ));\n\n  return (\n    <div className={style.posts}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <textarea\n          className={style.textarea}\n          placeholder='Enter your message'\n          {...register('textarea')}\n        ></textarea>\n        <button\n          className={style.btn}\n          type='submit'\n        >\n          Add post\n        </button>\n      </form>\n      {postsElements}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"profileInfo_title__YRYI1\"};","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateStatus } from '../../../../redux/profile-reducer';\n\nexport const ProfileStatus = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n  const dispatch = useDispatch();\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    if (status !== props.status) {\n      dispatch(updateStatus(status));\n    }\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.target.value);\n  };\n\n  useEffect(() => {\n    if (props.status !== status) {\n      setStatus(props.status);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.status]);\n\n  return (\n    <div>\n      {editMode ? (\n        <input\n          type='text'\n          value={status}\n          onBlur={deactivateEditMode}\n          autoFocus={true}\n          onChange={onStatusChange}\n        />\n      ) : (\n        <div onClick={activateEditMode}>{status || '-------'}</div>\n      )}\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Preloader } from '../../common/preloader/Preloader';\nimport style from './profileInfo.module.css';\nimport { ProfileStatus } from './profileStatus/ProfileStatus';\nimport { getUserProfile } from '../../../redux/profile-selectors';\nimport { getUserId } from '../../../redux/auth-selectors';\n\nexport const ProfileInfo = () => {\n  const userProfile = useSelector(getUserProfile);\n  const currentUserId = useSelector(getUserId);\n\n  if (!userProfile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <h3 className={style.title}>My posts</h3>\n      <img\n        src={userProfile.photos.small}\n        alt='avatar'\n      />\n      {currentUserId === userProfile.userId ? <ProfileStatus /> : null}\n      <div>{userProfile.fullName}</div>\n      <div>{userProfile.contacts.github}</div>\n    </div>\n  );\n};\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getUserId } from '../../redux/auth-selectors';\nimport { getUserProfile } from '../../redux/profile-reducer';\nimport { MyPosts } from './myPosts/MyPosts';\nimport style from './profile.module.css';\nimport { ProfileInfo } from './profileInfo/ProfileInfo';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const authorizedUserId = useSelector(getUserId);\n\n  const redirectToLogin = useCallback(() => {\n    navigate('/login');\n  }, [navigate]);\n\n  useEffect(() => {\n    const profileUserId = userId || authorizedUserId;\n    if (profileUserId) {\n      dispatch(getUserProfile(profileUserId));\n    } else {\n      redirectToLogin();\n    }\n  }, [userId, authorizedUserId, dispatch, redirectToLogin]);\n\n  return (\n    <div className={style.profile}>\n      <ProfileInfo />\n      <MyPosts />\n    </div>\n  );\n};\n\nexport default Profile;\n"],"names":["getProfilePage","state","profilePage","getPost","createSelector","posts","getUserProfile","profile","Post","props","_jsxs","className","style","children","_jsx","src","avatar","alt","message","likesCount","MyPosts","dispatch","useDispatch","useSelector","_useForm","useForm","register","handleSubmit","reset","postsElements","map","post","id","onSubmit","data","addPostAC","textarea","_objectSpread","placeholder","type","ProfileStatus","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","value","onBlur","updateStatus","autoFocus","onChange","e","target","onClick","ProfileInfo","userProfile","currentUserId","getUserId","photos","small","userId","fullName","contacts","github","Preloader","useParams","navigate","useNavigate","authorizedUserId","redirectToLogin","useCallback","profileUserId"],"sourceRoot":""}