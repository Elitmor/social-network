{"version":3,"file":"static/js/827.0215a766.chunk.js","mappings":"gOAIaA,GAAcC,E,QAAAA,IACzB,CAHqB,SAACC,GAAK,OAAKA,EAAMC,WAAY,IAIlD,SAACA,GAAW,OAAKA,EAAYC,QAAQ,I,UCLvC,EAAuB,qB,SCEVC,EAAS,SAACC,GACrB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACzBH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CACNC,GAAE,YAAAC,OAAcP,EAAMQ,IACtBL,MAAO,SAAAM,GACL,MAAO,CACLC,MAFcD,EAARE,SAEY,UAAY,UAElC,EAAEP,SAEDJ,EAAMY,QAIf,ECjBA,EAA0B,yBCCbC,EAAU,SAACb,GACtB,OACEC,EAAAA,EAAAA,KAAAa,EAAAA,SAAA,CAAAV,UACEH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,SAAEJ,EAAMe,WAG5C,ECPA,GAAgB,QAAU,2BAA2B,MAAQ,yBAAyB,SAAW,4BAA4B,IAAM,wBC4DnI,EAnDkB,SAACf,GACjB,IAAMgB,GAAWC,EAAAA,EAAAA,MACXnB,GAAWoB,EAAAA,EAAAA,IAAYxB,GACvByB,GAASD,EAAAA,EAAAA,IAAYE,EAAAA,IAE3BC,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAO1BC,EAAkB5B,EAAS6B,KAAI,SAACC,GAAW,OAC/C3B,EAAAA,EAAAA,KAACF,EAAM,CAELS,GAAIoB,EAAOpB,GACXI,KAAMgB,EAAOhB,MAFRgB,EAAOpB,GAGZ,IAGEqB,EAAmB/B,EAAS6B,KAAI,SAACG,GAAM,OAC3C7B,EAAAA,EAAAA,KAACY,EAAO,CAENL,GAAIsB,EAAEtB,GACNO,QAASe,EAAEf,SAFNe,EAAEtB,GAGP,IAGJ,OAAOW,GACLY,EAAAA,EAAAA,MAAA,OAAK7B,UAAWC,EAAAA,QAAcC,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,MAAYC,SAAEsB,KAC9BzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,SAAeC,SAAEyB,KACjCE,EAAAA,EAAAA,MAAA,QAAMC,SAAUR,GAzBH,SAACS,GAChBjB,GAASkB,EAAAA,EAAAA,GAAwBD,EAAKE,WACtCV,GACF,IAsB2CrB,SAAA,EACrCH,EAAAA,EAAAA,KAAA,YAAAmC,EAAAA,EAAAA,GAAA,CACElC,UAAWC,EAAAA,SACXkC,YAAY,sBACRd,EAAS,eAEftB,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EAAAA,IACXmC,KAAM,SAASlC,SAChB,oBAMLH,EAAAA,EAAAA,KAACsC,EAAAA,GAAQ,CAACjC,GAAG,UAEjB,C","sources":["redux/dialogs-selectors.js","webpack://social-network/./src/components/dialogs/dialog/dialog.module.css?f2d2","components/dialogs/dialog/Dialog.tsx","webpack://social-network/./src/components/dialogs/message/message.module.css?f3a2","components/dialogs/message/Message.tsx","webpack://social-network/./src/components/dialogs/myDialogs.module.css?ae16","components/dialogs/MyDialogs.tsx"],"sourcesContent":["import { createSelector } from 'reselect';\n\nconst getDialogsPage = (state) => state.dialogsPage;\n\nexport const getMessages = createSelector(\n  [getDialogsPage],\n  (dialogsPage) => dialogsPage.messages,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"dialog_item__Xzn3y\"};","import { NavLink } from 'react-router-dom';\nimport style from './dialog.module.css';\n\nexport const Dialog = (props: any) => {\n  return (\n    <div className={style.item}>\n      <NavLink\n        to={`/dialogs/${props.id}`}\n        style={({ isActive }) => {\n          return {\n            color: isActive ? '#40c0e7' : 'inherit',\n          };\n        }}\n      >\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"message_message__QFnwp\",\"active\":\"message_active__ayjy8\"};","import style from './message.module.css';\n\nexport const Message = (props: any) => {\n  return (\n    <>\n      <div className={style.message}>{props.message}</div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"myDialogs_dialogs__cU7eB\",\"items\":\"myDialogs_items__L2Q7X\",\"textarea\":\"myDialogs_textarea__0JtIg\",\"btn\":\"myDialogs_btn__weCyY\"};","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getIsAuth } from '../../redux/auth-selectors';\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer';\nimport { getMessages } from '../../redux/dialogs-selectors';\nimport { Dialog } from './dialog/Dialog';\nimport { Message } from './message/Message';\nimport style from './myDialogs.module.css';\n\nconst MyDialogs = (props: any) => {\n  const dispatch = useDispatch();\n  const messages = useSelector(getMessages);\n  const isAuth = useSelector(getIsAuth);\n\n  const { register, handleSubmit, reset } = useForm();\n\n  const onSubmit = (data: any) => {\n    dispatch(addMessageActionCreator(data.textarea));\n    reset();\n  };\n\n  const dialogsElements = messages.map((dialog: any) => (\n    <Dialog\n      key={dialog.id}\n      id={dialog.id}\n      name={dialog.name}\n    />\n  ));\n\n  const messagesElements = messages.map((m: any) => (\n    <Message\n      key={m.id}\n      id={m.id}\n      message={m.message}\n    />\n  ));\n\n  return isAuth ? (\n    <div className={style.dialogs}>\n      <div className={style.items}>{dialogsElements}</div>\n      <div className={style.messages}>{messagesElements}</div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <textarea\n          className={style.textarea}\n          placeholder='Enter your message'\n          {...register('textarea')}\n        ></textarea>\n        <button\n          className={style.btn}\n          type={'submit'}\n        >\n          Add post\n        </button>\n      </form>\n    </div>\n  ) : (\n    <Navigate to='/login' />\n  );\n};\n\nexport default MyDialogs;\n"],"names":["getMessages","createSelector","state","dialogsPage","messages","Dialog","props","_jsx","className","style","children","NavLink","to","concat","id","_ref","color","isActive","name","Message","_Fragment","message","dispatch","useDispatch","useSelector","isAuth","getIsAuth","_useForm","useForm","register","handleSubmit","reset","dialogsElements","map","dialog","messagesElements","m","_jsxs","onSubmit","data","addMessageActionCreator","textarea","_objectSpread","placeholder","type","Navigate"],"sourceRoot":""}