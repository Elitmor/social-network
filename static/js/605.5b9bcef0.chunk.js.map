{"version":3,"file":"static/js/605.5b9bcef0.chunk.js","mappings":"+PAKaA,GAAcC,E,QAAAA,IACzB,CAHqB,SAACC,GAAmB,OAAKA,EAAMC,WAAY,IAIhE,SAACA,GAAW,OAAKA,EAAYC,QAAQ,I,UCNvC,EAAuB,qB,SCOVC,EAAoC,SAACC,GAChD,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACzBH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CACNC,GAAE,YAAAC,OAAcP,EAAMQ,IACtBL,MAAO,SAAAM,GACL,MAAO,CACLC,MAFcD,EAARE,SAEY,UAAY,UAElC,EAAEP,SAEDJ,EAAMY,QAIf,ECtBA,EAA0B,yBCMbC,EAAsC,SAACb,GAClD,OACEC,EAAAA,EAAAA,KAAAa,EAAAA,SAAA,CAAAV,UACEH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,SAAEJ,EAAMe,WAG5C,ECZA,GAAgB,QAAU,2BAA2B,MAAQ,yBAAyB,SAAW,4BAA4B,IAAM,wB,UCyEnI,EAxD4B,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXnB,GAA8BoB,EAAAA,EAAAA,IAAYxB,GAC1CyB,GAAkBD,EAAAA,EAAAA,IAAYE,EAAAA,IAEpCC,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAExBC,EAAeC,EAAAA,EAAAA,WAOjBC,EAAkB9B,EAAS+B,KAAI,SAACC,GAAkB,OACtD7B,EAAAA,EAAAA,KAACF,EAAM,CAELS,GAAIsB,EAAOtB,GACXI,KAAMkB,EAAOlB,MAFRkB,EAAOtB,GAGZ,IAGEuB,EAAmBjC,EAAS+B,KAAI,SAACG,GAAC,OACtC/B,EAAAA,EAAAA,KAACY,EAAO,CAENL,GAAIwB,EAAExB,GACNO,QAASiB,EAAEjB,SAFNiB,EAAExB,GAGP,IAGJ,OAAOW,GACLc,EAAAA,EAAAA,MAAA,OAAK/B,UAAWC,EAAAA,QAAcC,SAAA,EAC5B6B,EAAAA,EAAAA,MAAA,OAAK/B,UAAWC,EAAAA,MAAYC,SAAA,CACzBwB,GACDK,EAAAA,EAAAA,MAAA,QAAMC,SAAUV,GAzBL,SAACW,GAChBnB,EAASU,EAAW,YAAaS,EAAKC,WACtCX,GACF,IAsB6CrB,SAAA,EACrCH,EAAAA,EAAAA,KAACoC,EAAAA,GAAgBC,EAAAA,EAAAA,GAAA,CACfpC,UAAWC,EAAAA,SACXoC,YAAY,sBACRhB,EAAS,eAEftB,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CACLC,QAAQ,YACRC,KAAK,SACLC,SAAS1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAQ,IAAIxC,SACvB,oBAKLH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,SAAeC,SAAE2B,QAGnC9B,EAAAA,EAAAA,KAAC4C,EAAAA,GAAQ,CAACvC,GAAG,UAEjB,C","sources":["redux/dialogs-selectors.ts","webpack://social-network/./src/components/dialogs/dialog/dialog.module.css?f2d2","components/dialogs/dialog/Dialog.tsx","webpack://social-network/./src/components/dialogs/message/message.module.css?f3a2","components/dialogs/message/Message.tsx","webpack://social-network/./src/components/dialogs/myDialogs.module.css?ae16","components/dialogs/MyDialogs.tsx"],"sourcesContent":["import { createSelector } from 'reselect';\nimport { AppStateType } from './store';\n\nconst getDialogsPage = (state: AppStateType) => state.dialogsPage;\n\nexport const getMessages = createSelector(\n  [getDialogsPage],\n  (dialogsPage) => dialogsPage.messages,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"dialog_item__Xzn3y\"};","import { NavLink } from 'react-router-dom';\nimport style from './dialog.module.css';\n\ntype DialogPropsType = {\n  id: string;\n  name: string;\n};\n\nexport const Dialog: React.FC<DialogPropsType> = (props) => {\n  return (\n    <div className={style.item}>\n      <NavLink\n        to={`/dialogs/${props.id}`}\n        style={({ isActive }) => {\n          return {\n            color: isActive ? '#40c0e7' : 'inherit',\n          };\n        }}\n      >\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"message_message__QFnwp\",\"active\":\"message_active__ayjy8\"};","import style from './message.module.css';\n\ntype MessagePropsType = {\n  id: string;\n  message: string;\n};\n\nexport const Message: React.FC<MessagePropsType> = (props) => {\n  return (\n    <>\n      <div className={style.message}>{props.message}</div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"myDialogs_dialogs__cU7eB\",\"items\":\"myDialogs_items__L2Q7X\",\"textarea\":\"myDialogs_textarea__0JtIg\",\"btn\":\"myDialogs_btn__weCyY\"};","import { Button, TextareaAutosize } from '@mui/material';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getIsAuth } from '../../redux/auth-selectors';\nimport { actions } from '../../redux/dialogs-reducer';\nimport { getMessages } from '../../redux/dialogs-selectors';\nimport { DialogType } from '../../types/types';\nimport { Dialog } from './dialog/Dialog';\nimport { Message } from './message/Message';\nimport style from './myDialogs.module.css';\nimport SendIcon from '@mui/icons-material/Send';\n\ninterface MyDialogsFormData {\n  textarea: string;\n}\n\nconst MyDialogs: React.FC = () => {\n  const dispatch = useDispatch();\n  const messages: Array<DialogType> = useSelector(getMessages);\n  const isAuth: boolean = useSelector(getIsAuth);\n\n  const { register, handleSubmit, reset } = useForm<MyDialogsFormData>();\n\n  const { addMessage } = actions;\n\n  const onSubmit = (data: MyDialogsFormData) => {\n    dispatch(addMessage('Your Name', data.textarea));\n    reset();\n  };\n\n  const dialogsElements = messages.map((dialog: DialogType) => (\n    <Dialog\n      key={dialog.id}\n      id={dialog.id}\n      name={dialog.name}\n    />\n  ));\n\n  const messagesElements = messages.map((m) => (\n    <Message\n      key={m.id}\n      id={m.id}\n      message={m.message}\n    />\n  ));\n\n  return isAuth ? (\n    <div className={style.dialogs}>\n      <div className={style.items}>\n        {dialogsElements}\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <TextareaAutosize\n            className={style.textarea}\n            placeholder='Enter your message'\n            {...register('textarea')}\n          ></TextareaAutosize>\n          <Button\n            variant='contained'\n            type='submit'\n            endIcon={<SendIcon />}\n          >\n            Add post\n          </Button>\n        </form>\n      </div>\n      <div className={style.messages}>{messagesElements}</div>\n    </div>\n  ) : (\n    <Navigate to='/login' />\n  );\n};\n\nexport default MyDialogs;\n"],"names":["getMessages","createSelector","state","dialogsPage","messages","Dialog","props","_jsx","className","style","children","NavLink","to","concat","id","_ref","color","isActive","name","Message","_Fragment","message","dispatch","useDispatch","useSelector","isAuth","getIsAuth","_useForm","useForm","register","handleSubmit","reset","addMessage","actions","dialogsElements","map","dialog","messagesElements","m","_jsxs","onSubmit","data","textarea","TextareaAutosize","_objectSpread","placeholder","Button","variant","type","endIcon","SendIcon","Navigate"],"sourceRoot":""}